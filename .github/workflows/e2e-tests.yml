name: E2E Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Enable debug mode with tmate'
        required: false
        default: false

jobs:
  e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45

    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2] # Run tests in parallel shards for speed

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build extension
        run: npm run build

      - name: Verify extension build
        run: |
          if [ ! -f "dist/manifest.json" ]; then
            echo "❌ Extension build failed - manifest.json not found"
            exit 1
          fi
          echo "✅ Extension built successfully"
          ls -la dist/

      - name: Install Playwright browsers
        run: npx playwright install chromium

      - name: Install system dependencies
        run: npx playwright install-deps chromium

      - name: Run E2E tests (Shard ${{ matrix.shard }})
        run: npm run test:e2e -- tests/e2e/wizard-basic.spec.ts --shard=${{ matrix.shard }}/2 --retries=2
        env:
          CI: true
          PWTEST_SKIP_TEST_OUTPUT: 1

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-shard-${{ matrix.shard }}
          path: |
            tests/test-results/
            tests/screenshots/
            tests/downloads/
          retention-days: 7

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-shard-${{ matrix.shard }}
          path: tests/test-results/html/
          retention-days: 7

      # Debug with tmate on failure (optional)
      - name: Setup tmate session
        if: ${{ failure() && github.event.inputs.debug_enabled == 'true' }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

  merge-reports:
    name: Merge Test Reports
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: e2e-test-results-shard-*
          merge-multiple: true
          path: tests/test-results-merged/

      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-shard-*
          merge-multiple: true
          path: tests/reports-merged/

      - name: Generate summary
        run: |
          echo "## 🎭 E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Count test files
          if [ -d "tests/test-results-merged/screenshots" ]; then
            screenshot_count=$(find tests/test-results-merged/screenshots -type f -name "*.png" | wc -l)
            echo "📸 Screenshots captured: $screenshot_count" >> $GITHUB_STEP_SUMMARY
          fi

          if [ -d "tests/test-results-merged/downloads" ]; then
            gif_count=$(find tests/test-results-merged/downloads -type f -name "*.gif" | wc -l)
            echo "🎬 GIFs created: $gif_count" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- [📊 Test Reports](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- [📸 Screenshots](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- [🎬 Generated GIFs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

      - name: Upload merged results
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-all
          path: tests/test-results-merged/
          retention-days: 30

  # Smoke test for quick validation
  smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build extension
        run: npm run build

      - name: Install Playwright
        run: |
          npx playwright install chromium
          npx playwright install-deps chromium

      - name: Run smoke tests
        run: |
          # Run only the most critical test from wizard-basic.spec.ts
          npm run test:e2e -- tests/e2e/wizard-basic.spec.ts --grep "Extension loads and GIF button appears" --retries=1
        env:
          CI: true
          PWTEST_SKIP_TEST_OUTPUT: 1

      - name: Quick validation summary
        if: always()
        run: |
          echo "## 🚀 Smoke Test" >> $GITHUB_STEP_SUMMARY
          if [ $? -eq 0 ]; then
            echo "✅ Extension loads and basic GIF creation works!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Smoke test failed - check logs" >> $GITHUB_STEP_SUMMARY
          fi